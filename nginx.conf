# ============================================
# 生产级别 Nginx 配置
# 项目：Art Admin UI
# 说明：前端静态资源 + API 网关代理
# ============================================

# ---------- 上游服务器配置 ----------
upstream backend_api {
    # 后端 API 网关地址
    server host.docker.internal:9999;

    # 连接保持配置
    keepalive 32;
    keepalive_timeout 60s;
    keepalive_requests 100;
}

# ---------- HTTP 服务器配置 ----------
server {
    listen 80;
    server_name 127.0.0.1;  # 替换为你的域名

    # 访问日志和错误日志
    access_log /var/log/nginx/art-admin-ui-access.log;
    error_log /var/log/nginx/art-admin-ui-error.log warn;

    # 根目录（Vue 构建产物路径）
    root /var/www/art-admin-ui/dist;
    index index.html;

    # 字符集
    charset utf-8;

    # ---------- 安全头配置 ----------
    # XSS 保护
    add_header X-XSS-Protection "1; mode=block" always;
    # 防止点击劫持
    add_header X-Frame-Options "SAMEORIGIN" always;
    # 禁止 MIME 类型嗅探
    add_header X-Content-Type-Options "nosniff" always;
    # 引用策略
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # ---------- Gzip 压缩配置 ----------
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/rss+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    # ---------- 静态资源缓存配置 ----------
    # HTML 文件不缓存
    location ~* \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        try_files $uri $uri/ /index.html;
    }

    # JavaScript 和 CSS 文件 - 长期缓存
    location ~* \.(js|css)$ {
        add_header Cache-Control "public, max-age=31536000, immutable";
        access_log off;
    }

    # 图片、字体等静态资源 - 长期缓存
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|woff|woff2|ttf|eot|otf)$ {
        add_header Cache-Control "public, max-age=31536000, immutable";
        access_log off;
    }

    # ---------- API 代理配置 ----------
    location /basic-api/ {
        # 代理到本地 9999 端口的后端服务
        proxy_pass http://backend_api/;

        # 请求头配置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # 连接保持
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 缓冲配置
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 8 8k;
        proxy_busy_buffers_size 16k;

        # 禁用 API 请求的缓存
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";

        # CORS 配置（如果需要）
        # add_header Access-Control-Allow-Origin "*" always;
        # add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        # add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        # add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;

        # OPTIONS 请求处理（CORS 预检）
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
    }


    # ---------- 前端路由（SPA History Mode） ----------
    location / {
        try_files $uri $uri/ /index.html;
    }

    # ---------- 安全配置 ----------
    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 禁止访问备份文件
    location ~* \.(bak|backup|old|tmp|temp|swp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # ---------- 错误页面配置 ----------
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
